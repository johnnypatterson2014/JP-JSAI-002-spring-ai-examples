spring.application.name=spring-ai-examples

spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o
spring.ai.openai.chat.observations.include-prompt=true
spring.ai.openai.chat.observations.include-completion=true

spring.docker.compose.stop.command=down
spring.docker.compose.stop.arguments= -v

#management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans
#otel.exporter.otlp.endpoint=http://zipkin:9411/v1/traces
#otel.tracing.enabled=true
        
### Set sampling probability to 1.0 to enable tracing
### on 100% of requests.
management.tracing.sampling.probability=1.0

# Expose all actuator endpoints
#management.endpoints.web.exposure.include=health, metrics, prometheus
management.endpoints.web.exposure.include=*

# Enable metrics endpoint
management.endpoint.metrics.enabled=true

# Enable prometheus endpoint
management.endpoint.prometheus.enabled=true

logging.level.root=debug
logging.pattern.level= "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
management.metrics.distribution.percentiles-histogram.http.server.requests=true

spring.threads.virtual.enabled=true

#spring.profiles.default=openai

### Set the resource path for the file to be processed
### e.g., app.resource=file:///Users/yourname/Downloads/yourfile.pdf
###    or app.resource=classpath:/data/myfile.pdf
###    or app.resource=https://en.wikipedia.org/wiki/Chess
#app.resource=classpath:/data/anthropic.pdf